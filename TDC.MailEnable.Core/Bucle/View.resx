<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="StatusStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="tBtnManual.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAJhSURBVFhH7ddLqE1RHMfx4/12KVHII4/JnchAkUdJhspA
        JCWZeA6M3IGpMpHHREoZSUkJkVdh4B1hbuA98i7yiu/3nL1Ybeucfe69u21yf/Xp7rPP3uu/7t5rrb1P
        rQcZhFGNzerTH5uxpv6p4lh8E95jizuqTCj+Dr/gVagsAxAXr7QDFrdYXFzXcRA7MB8jUHoGIlU8zzFx
        AasxDKWlE0+QKvoWFv4Z7fuMo5iMUuIV2AoLxcW1C3OxHscQX6VzmIpS4hhwyuU7EQ9CF6bluI3w/Ql0
        IM5iHMq4ncwYzGps/kmqE6lZMBNX4fffkV8rPKfV+fVswAMsqH/6m3wnmjXgjHgJj3mESQgp7MBgnIIH
        3MB4xAmd+Jj9TaUf9sE2vArxkl3YgRl4Cg84j9SUshPbsLb+KZ1F+ADbOeCOLIUdWAqnkgd0uaNJvFKj
        G5vJjMND2M5lDIUp7ID3v+UBbcYrdw22cwuhs4Ud2IiyO3AT4d2hsAPL8AUesNMdPUx8Cy5iCIwrq4NX
        bv+T2XgBTzyLcO+6m4UIg3CvO9qNPT0NT3yDpqtVizgNLWob37AKISMxJeN2Mg5E568NnMFYdCd2+jU8
        /w7itWQdnmXcTsaCl2ADP+Azv90X0Dm4B8/9Cv+ZOIWDMGQJnsMDvYzHYeO+lqXiurACjxEKHEH+JaWt
        h1HISoQBKZ8PYV13lE/DPDh1TyJ+UHnrJqLXcVreh436jA+zwkH2ChaNX0icwodRSvGQ6diNMGgcI3cR
        iuoTrsAHz3CUHu+9DyEzAXvgfdyP7XDM/LdfSn3pSy9Tq/0G7u/Fd1VqWc4AAAAASUVORK5CYII=
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAHHYAQBx2AEAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAR0dHAEdHRwBHR0cAVFRUAEdHRwFHR0cAR0dHAEdHRwBHR0cAR0dHAEdH
        RwBHR0cAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABHR0cAR0dHAEdHRwBHR0cOR0dHCkdHRwBHR0cAR0dHAUdH
        RwNHR0cDR0dHAEdHRwBHR0cAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAR0dHAEdHRwBHR0cAR0dHAEdHRwNHR0cAR0dHO0dHR/9HR0eQR0dHAEdH
        RwdHR0cCR0dHAEdHRwBHR0cAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABHR0cAR0dHAEdHRwFHR0cCR0dHCEdHRwBHR0diR0dH/0dH
        R+9HR0ciR0dHAEhISAFHR0d8R0dHe0dHRwBHR0cAR0dHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEdHRwBHR0cAR0dHAUdHRwFHR0cER0dHAEdH
        R4RHR0f/R0dH/0dHR7FHR0dBR0dHxUdHR/9HR0f0R0dHH0dHRwBHR0cCAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAR0dHA0dHRwBHR0d4R0dH0UdH
        R4pHR0dtR0dH4UdHR/9HR0fuR0dH+UdHR/9HR0f7R0dH/0dHR6BHR0cAR0dHA0dHRwBHR0cAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABHR0cAR0dHAEdH
        R8lHR0f/R0dH+0dHR/9HR0fLR0dHPEdHRxJHR0cdR0dHiEdHR/5HR0f/R0dHMkdHRwBHR0cHR0dHAUdH
        RwBHR0cAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEdH
        RwJHR0cAR0dHG0dHR9NHR0f/R0dH1UdHRw5HR0cAR0dHAUdHRwNHR0cAR0dHhEdHR/9HR0c+R0dHAEdH
        RwJHR0cAAAAAAEdHRwBHR0cAR0dHAUdHRwRHR0cCR0dHAEdHRwBHR0cAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAR0dHAEdHRwJHR0cAR0dHHUdHR/9HR0d6R0dHAEdHRwdHR0cBR0dHBEdHRwBHR0cbR0dH9UdH
        R/xHR0e4R0dHZUdHRwtHR0cAR0dHAUdHRwBHR0cBSEhIAEdHRwBHR0cAR0dHAEdHRwAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABHR0cAR0dHAkdHRwBHR0crR0dH/0dHR11HR0cAR0dHA0dHRwBHR0cBR0dHAEdH
        RwxHR0fiR0dH/0dHR/xHR0f/R0dHPEdHRwBHR0cER0dHAEdHRxVHR0dTR0dHIkdHRwBHR0cBR0dHAEdH
        RwBHR0cAR0dHAEdHRwBHR0cAAAAAAEdHRwJHR0cAR0dHQkdHR+ZHR0f/R0dHh0dHRwBHR0cIR0dHA0dH
        RwZHR0cAR0dHK0dHR/9HR0fuR0dHp0dHR3JHR0cTR0dHAEdHRwZHR0cAR0dHbUdHR/9HR0ejR0dHAEdH
        RwNHR0cAR0dHAEdHRwRHR0cCR0dHAEdHRwBHR0cAR0dHAEdHRxlHR0fyR0dH/0dHR/9HR0fzR0dHMUdH
        RwBHR0cCR0dHAEdHRwBHR0e0R0dH60dHRxFHR0dZR0dHW0dHRwBHR0cER0dHA0dHRwBHR0ezR0dH/0dH
        R7tHR0cAR0dHBUdHRwNHR0cCR0dHAEdHRwBHR0cAR0dHAEdHRwBHR0cAR0dHAEdHR5ZHR0e1R0dHiUdH
        R7JHR0fxR0dHe0dHR0BHR0dfR0dHxEdHR/9HR0fXR0dHJkdHR/JHR0f/R0dHc0dHRwBHR0cIR0dHOEdH
        R+1HR0f/R0dH1UdHRwFHR0cAR0dHAEdHRwFHR0d0R0dHOkdHRwBHR0cCR0dHAEdHRwBHR0cAR0dHAEdH
        RwFHR0cAR0dHDkdHR+lHR0f/R0dH/0dHR+xHR0f5R0dH/kdHR/9HR0dCR0dHnkdHR/9HR0f4R0dHtEdH
        R95HR0f/R0dH/kdHR/9HR0f+R0dHxUdHR1VHR0cmR0dHwEdHR/9HR0fbR0dHCUdHRwBHR0cBR0dHAEdH
        RwBHR0cCR0dHBEdHRwJHR0cKR0dH3EdHR/9HR0fMR0dHA0dHRytHR0fWR0dH/0dHR4tHR0cuR0dH/0dH
        R/xHR0f/R0dH/0dHR/1HR0f7R0dH/EdHR/5HR0f/R0dH/UdHR/hHR0f9R0dH/0dHR4ZHR0cAR0dHAkdH
        RwBHR0cAR0dHAEdHRwBHR0cBR0dHAEdHRwhHR0fjR0dH/0dHRz5HR0cAR0dHAEdHRxlHR0eJR0dHEUdH
        R1NHR0f/R0dH/kdHR/tHR0f7R0dH/0dHR/9HR0f/R0dH/kdHR/lHR0f8R0dH+0dHR/9HR0fDR0dHBEdH
        RwBHR0cBAAAAAAAAAAAAAAAAAAAAAEdHRwBHR0cBR0dHAEdHR0JHR0dhR0dHAEdHRwFHR0cGR0dHBUdH
        RwBHR0ccR0dH60dHR/9HR0f9R0dH/UdHR/9HR0fcR0dHr0dHR8BHR0f2R0dH/0dHR/1HR0f7R0dH/0dH
        R5NHR0cAR0dHCEdHRwNHR0cCAAAAAAAAAAAAAAAAAAAAAAAAAABHR0cAR0dHAEdHRwFHR0cCR0dHAEdH
        R7FHR0fgR0dHw0dHR9ZHR0f/R0dH/UdHR/9HR0f6R0dHakdHRwFHR0cBR0dHAEdHRyFHR0fCR0dH/0dH
        R/xHR0f/R0dH8UdHRxtHR0cAR0dHAUdHRwAAAAAAAAAAAAAAAABHR0cAR0dHAEdHRwBHR0cDR0dHBEdH
        RwBHR0cJR0dH20dHR/9HR0f9R0dH/kdHR/5HR0f9R0dH/0dHR25HR0cAR0dHA0dHRwNHR0cDR0dHAEdH
        Rw9HR0faR0dH/0dHR/xHR0f/R0dHn0dHR1ZHR0dHR0dHHgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABHR0cAR0dHAUdHRwBHR0cOR0dHckdHR+FHR0f/R0dH/UdHR/9HR0fjR0dHDElJSQBHR0cCR0dHAEhI
        SABHR0cGR0dHAEdHR3JHR0f/R0dH+0dHR/5HR0f+R0dH/UdHR/9HR0e/AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAEdHRwBHR0cAR0dHAEdHRwNHR0cAR0dHRUdHR/9HR0f6R0dH/0dHR8FHR0cAR0dHAkdH
        RwBHR0cAR0dHAEdHRwNHR0cAR0dHSEdHR/9HR0f9R0dH/0dHR/1HR0f/R0dH8UdHR5UAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAR0dHAEdHRwBHR0cAR0dHBEdHRwBHR0c2R0dH/0dHR/xHR0f/R0dH0TU1
        NQBHR0cCR0dHAEdHRwBHR0cAR0dHBEdHRwBHR0dZR0dH/0dHR/pHR0f/R0dHzUdHR0dHR0cSR0dHAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABHR0cAR0dHAEdHRwBHR0cDR0dHAEdHRy9HR0f9R0dH/0dH
        R/5HR0f/R0dHOkdHRwBHR0cGR0dHBEdHRwRHR0cER0dHAEdHR7BHR0f/R0dH+EdHR/9HR0d6R0dHAEdH
        RwRHR0cCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABHR0cAR0dHAUdHRwBHR0dJR0dH5UdH
        R/5HR0f7R0dH/UdHR/9HR0fUR0dHGkdHRwBHR0cCR0dHAkdHRwBHR0dzR0dH/0dHR/1HR0f+R0dH/0dH
        RzVHR0cAR0dHBEdHRwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAR0dHAEdHRwNHR0cAR0dHXEdH
        R/9HR0f9R0dH/0dHR/9HR0f9R0dH/UdHR/9HR0fpR0dHhEdHR1FHR0dgR0dHuEdHR/9HR0f+R0dH/kdH
        R/lHR0f/R0dHdUdHRwBHR0cCR0dHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABHR0cAR0dHAkdH
        RwBHR0czR0dH8kdHR81HR0eER0dHpUdHR/9HR0f+R0dH/UdHR/5HR0f/R0dH/0dHR/9HR0f/R0dH/UdH
        R/xHR0f+R0dH/0dHR/5HR0f/R0dHcUdHRwBHR0cCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABHR0cAR0dHAEdHRwJHR0cUR0dHAkdHRwBHR0cCR0dHo0dHR/9HR0f+R0dH+0dHR/dHR0f4R0dH+UdH
        R/xHR0f+R0dH/0dHR+pHR0eRR0dH3kdHR/9HR0foR0dHEUdHRwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAARkZGAEdHRwBHR0cAR0dHAUdHRwBHR0cBR0dHBkdHRwBHR0caR0dH9EdHR/9HR0f9R0dH/0dH
        R/9HR0f+R0dH/UdHR/9HR0e9R0dHJ0dHRwBHR0cIR0dHbEdHR1lHR0cAR0dHAgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAR0dHAEdHRwBHR0cAR0dHAUdHRwBHR0cDR0dHAEdHR0VHR0f/R0dH/0dH
        R8JHR0eKR0dHqEdHR9dHR0f/R0dH/0dHRzlHR0cAR0dHBkdHRwFHR0cAR0dHAEdHRwBHR0cAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAR0dHAEdHRwRHR0cAR0dHh0dH
        R/9HR0fmR0dHH0dHRwBHR0cAR0dHQUdHR/9HR0f/R0dHS0dHRwBHR0cDR0dHAUdHRwRHR0cDR0dHAEdH
        RwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABHR0cAR0dHAkdH
        RwBHR0dHR0dH10dHR1ZHR0cAR0dHB0dHRwVHR0cAR0dHtkdHR/9HR0dVR0dHAEdHRwRHR0cAR0dHAEdH
        RwBHR0cAR0dHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAR0dHAEdHRwBHR0cDR0dHA0dHRwFHR0cAR0dHAkdHRwBHR0c3R0dHZkdHRwxHR0cAR0dHAQAA
        AAAAAAAAAAAAAAAAAAAAAAAA9TP///JBf/9ES///hCJ//0QBf/9AAn//QAJf/0EiUX+iIFT/IiBRJ0Ig
        UUWBIJESQABAxIgAAAKAAAAESGAABeSIAAj6QAQE5IAiAP5AAQD/kEEA/1AFAf9QIQT/IBIE/0AABP9A
        AAL/RAAB/0IAIv9CAEn/8hhC//IkU//9FF8=
</value>
  </data>
</root>