<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="StatusStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="tBtnManual.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAJhSURBVFhH7ddLqE1RHMfx4/12KVHII4/JnchAkUdJhspA
        JCWZeA6M3IGpMpHHREoZSUkJkVdh4B1hbuA98i7yiu/3nL1Ybeucfe69u21yf/Xp7rPP3uu/7t5rrb1P
        rQcZhFGNzerTH5uxpv6p4lh8E95jizuqTCj+Dr/gVagsAxAXr7QDFrdYXFzXcRA7MB8jUHoGIlU8zzFx
        AasxDKWlE0+QKvoWFv4Z7fuMo5iMUuIV2AoLxcW1C3OxHscQX6VzmIpS4hhwyuU7EQ9CF6bluI3w/Ql0
        IM5iHMq4ncwYzGps/kmqE6lZMBNX4fffkV8rPKfV+fVswAMsqH/6m3wnmjXgjHgJj3mESQgp7MBgnIIH
        3MB4xAmd+Jj9TaUf9sE2vArxkl3YgRl4Cg84j9SUshPbsLb+KZ1F+ADbOeCOLIUdWAqnkgd0uaNJvFKj
        G5vJjMND2M5lDIUp7ID3v+UBbcYrdw22cwuhs4Ud2IiyO3AT4d2hsAPL8AUesNMdPUx8Cy5iCIwrq4NX
        bv+T2XgBTzyLcO+6m4UIg3CvO9qNPT0NT3yDpqtVizgNLWob37AKISMxJeN2Mg5E568NnMFYdCd2+jU8
        /w7itWQdnmXcTsaCl2ADP+Azv90X0Dm4B8/9Cv+ZOIWDMGQJnsMDvYzHYeO+lqXiurACjxEKHEH+JaWt
        h1HISoQBKZ8PYV13lE/DPDh1TyJ+UHnrJqLXcVreh436jA+zwkH2ChaNX0icwodRSvGQ6diNMGgcI3cR
        iuoTrsAHz3CUHu+9DyEzAXvgfdyP7XDM/LdfSn3pSy9Tq/0G7u/Fd1VqWc4AAAAASUVORK5CYII=
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAEAAAADAAAABAAAAAMAAAABAAAAAAAAABUAAADdAAAAtgAAAIwAAAA/AAAAAAAAAAQAAAAIAAAAdwAA
        AJgAAACVAAAAdgAAAAgAAAADAAAAAAAAAA0AAACDAAAADQAAAAAAAAABAAAAAAAAAAMAAAAAAAAArAAA
        AIAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAgAAAAKwAAAAAAAAAAwAAAAEAAAAAAAAAAAAA
        AAEAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAALAAAAhgAAAIMAAACGAAAACgAAAAAAAAAAAAAAAwAA
        AAAAAACuAAAAfwAAAAAAAAAEAAAAAAAAAAAAAAAAAAAABAAAAAAAAAB/AAAArgAAAAAAAAADAAAAAAAA
        AAAAAAABAAAAAAAAAA0AAACFAAAADgAAAAAAAAACAAAAAAAAAAoAAACGAAAAgwAAAIYAAAAKAAAAAAAA
        AEQAAACKAAAAuwAAANsAAAATAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAABAAAAAAAAABMAAADbAAAAugAA
        AIwAAAA/AAAAAAAAAAAAAAAKAAAAhgAAAIMAAACGAAAACgAAAAAAAAABAAAAAAAAAA0AAACCAAAADQAA
        AAAAAAABAAAAkQAAANoAAABwAAAAFwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAA
        ABYAAABvAAAA3gAAAIcAAAAAAAAAAgAAAAoAAACGAAAAgwAAAIYAAAAKAAAAAAAAAAEAAAAEAAAABAAA
        AAEAAAAEAAAAAAAAAAAAAACaAAAAjQAAAAAAAAAFAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAABAAAABQAAAAAAAACQAAAAkAAAAAAAAAAFAAAAAAAAAA0AAACCAAAADQAAAAAAAAABAAAABAAA
        AAEAAAAEAAAABAAAAAAAAAAAAAAAAAAAAJsAAACTAAAAAAAAAAoAAAAEAAAABAAAAAQAAAAAAAAAAAAA
        AAAAAAAEAAAABAAAAAQAAAAKAAAAAAAAAJYAAACRAAAAAAAAAAcAAAADAAAAAwAAAAEAAAAEAAAAAQAA
        AAAAAAANAAAAggAAAA0AAAAAAAAAAQAAAAAAAAAAAAAAnQAAAI8AAAAAAAAABAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAkQAAAJIAAAAAAAAABgAAAAIAAAADAAAAAwAA
        AAEAAAAAAAAACgAAAIYAAACDAAAAhgAAAAoAAAAAAAAAAQAAAAAAAABuAAAA3wAAAIkAAACTAAAAkgAA
        AJMAAAB4AAAACgAAAAAAAAAKAAAAeAAAAJMAAACSAAAAkwAAAIkAAADjAAAAaQAAAAAAAABaAAAAVgAA
        AAAAAAACAAAAAQAAAAAAAAAKAAAAhgAAAIMAAACGAAAACgAAAAAAAAABAAAAAAAAAAEAAABmAAAAmQAA
        AJEAAACPAAAAngAAAOYAAAAWAAAAAAAAABYAAADmAAAAngAAAI8AAACRAAAAmAAAAGsAAAAAAAAASwAA
        AI4AAACNAAAASwAAAAAAAAACAAAAAQAAAAAAAAANAAAAggAAAA0AAAAAAAAAAQAAAAAAAAAAAAAAAQAA
        AAAAAAAAAAAAAQAAAAAAAAAIAAAA3QAAADUAAAAAAAAAOQAAANwAAAAGAAAAAAAAAAEAAAAAAAAAAwAA
        AAAAAABLAAAAjgAAAI4AAABLAAAAAAAAAAIAAAAAAAAAAAAAAAQAAAABAAAABAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAABAAAAAQAAAAEAAAABwAAAAAAAAB7AAAA5gAAAIwAAADnAAAAdQAAAAAAAAAHAAAABAAA
        AAQAAAAEAAAAAwAAAAAAAABVAAAAVQAAAAAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAABTAAAAowAAAFEAAAAAAAAAAQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAIAAAACAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA//oABf/0IEL/6gYF/RQAAvoMgBP9FIASogQAAkIAAACjEAkAQRIJBEES
        CQQAkAkAPIgAAACAAAIAgIASKIyAEyQUAAIiIgYFCIhgQQQQQAIl0iZBJdJQQQXQYKIJyECBJdJRAiCC
        QIssmkEFAIBJBQCAhIsoioUFBBBKi+Iihf8=
</value>
  </data>
</root>